; Умножение A*B в ДК вторым способом с автокоррекцией
; r0      - ДК(A)
; (r2,r1) - ДК(B)
; (r4,r3) - СЧП (Результат A*B)
; r5      - счетчик
;  r6,r7 - временные переменные

    in r0 ;A
    in r1       ;B - младшая часть множимого
    
    ;заполняем старшую часть множимого знаком
    add 0,0,r2 
    rol r1,1,r6 ;знак в младший бит r6
    and r6,1,r6     
    sub r2,r6,r2
    
    add 0,0,r4 ;СЧП:=0
    add 0,0,r3
    
    add 0,8,r5 ;счетчик на 8 шагов
    
    rol r0,1,r0 ;трюк: сдвигаем множитель, чтобы компенсировать сдвиги основного цикла
    
    and r0,0b10,r6
    jz r6,shifts ; 00-сдвиги
    jz 0, subB   ; 10-вычитание+сдвиги
    
mainLoop:
    ; анализ младших бит множителя
    and r0,0b11,r6
    xor r6,0b10,r7
    jz r7,subB ;обработчик 10 - вычитание
    xor r6,0b01,r7
    jz r7,addB ;обработчик 01 - вычитание
    jz 0,shifts

subB:
    not r2,r2 ;инвертируем множимое, чтобы сэкономить регистры
    not r1,r1
    
    add r3,r1,r6 ;сложили младшие байты СЧП (y) и множимого (x) +1 (в ДК!)
    add r6,1,r6  ;r6=s=x+y+1
    
    ;определяем был ли перенос? s=x+y+1
    not r6,r6     ;r6=~s
    or  r1,r3,r7  ;r7=x|y
    and r6,r7,r7  ;r7=~s(x|y)
    and r1,r3,r6  ;r6=xy
    or  r6,r7,r6  ;r6=~s(x|y)|xy --- условие переноса
    rol r6,1,r6
    and r6,1,r6   ;r6=(был перенос) ? 1 : 0

    add r3,r1,r3 ;сложили младшие байты СЧП и множимого
    add r3,1,r3  ; +1 для ДК
    add r4,r2,r4 ;сложили старшие байты СЧП и множимого
    add r4,r6,r4 ;с учетом переноса из младших байт
    
    not r2,r2 ;инвертируем множимое (восстанавливаем старое значение)
    not r1,r1
    
    jz 0,shifts

addB:
    add r3,r1,r6 ;сложили младшие байты СЧП и множимого
    
    ;определяем был ли перенос? s=x+y
    not r6,r6     ;r6=~s
    or  r1,r3,r7  ;r7=x|y
    and r6,r7,r7  ;r7=~s(x|y)
    and r1,r3,r6  ;r6=xy
    or  r6,r7,r6  ;r6=~s(x|y)|xy --- условие переноса
    rol r6,1,r6
    and r6,1,r6   ;r6=(был перенос) ? 1 : 0

    add r3,r1,r3 ;сложили младшие байты СЧП и множимого
    add r4,r2,r4 ;сложили старшие байты СЧП и множимого
    add r4,r6,r4 ;с учетом переноса из младших байт

shifts:
    ror r0,1,r0    ; shift A.

    ; shift B (r2,r1) left
    rol r1,1,r1 
    and r1,1,r6 ;r6 --- старший бит младшей части множимого
    and r1,0xFE,r1
    
    rol r2,1,r2 
    and r2,0xFE,r2 
    or  r2,r6,r2
    
    ; уменьшаем счетчик
    sub r5,1,r5 
    jz r5, exit
    jz 0,mainLoop

exit:
    ;little endian
    out r3 ;младший
    out r4 ;старший
